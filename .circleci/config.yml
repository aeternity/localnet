version: 2.1
commands:
  run_test_nodes:
    description: Run docker-compose nodes
    parameters:
      config:
        type: string
        default: -f docker-compose.yml
      wait_time:
        type: integer
        default: 30
    steps:
      - run:
          name: Run nodes in background
          command: docker-compose << parameters.config >> up
          background: true
      - run:
          name: Give it some time to boot the nodes
          command: sleep << parameters.wait_time >>

  health_check_node:
    description: Health Check a Node
    parameters:
      external_port:
        type: integer
        default: 8080
      internal_port:
        type: integer
        default: 8080
      websocket_port:
        type: integer
        default: 8080
      min_peers:
        type: integer
        default: 0
      path_prefix:
        type: string
        default: ""
    steps:
      - run:
          name: Health check node APIs
          command: |
            MIN_PEERS=<< parameters.min_peers >> \
            EXTERNAL_ADDR=localhost:<< parameters.external_port >><< parameters.path_prefix >> \
            INTERNAL_ADDR=localhost:<< parameters.internal_port >><< parameters.path_prefix >> \
            WEBSOCKET_ADDR=localhost:<< parameters.websocket_port >><< parameters.path_prefix >> \
            ./test/healthcheck.sh

  integration_tests:
    description: Integration Tests
    steps:
      - health_check_node
      - health_check_node:
          external_port: 3013
          internal_port: 3113
          websocket_port: 3014

  integration_tests_multi:
    description: Integration Tests - Multiple nodes
    steps:
      - health_check_node:
          min_peers: 2
      - health_check_node:
          min_peers: 2
          external_port: 3013
          internal_port: 3113
          websocket_port: 3014
      - health_check_node:
          min_peers: 2
          path_prefix: /node1
      - health_check_node:
          min_peers: 2
          path_prefix: /node2
      - health_check_node:
          min_peers: 2
          path_prefix: /node3

  integration_tests_full:
    description: Integration Tests - Full
    steps:
      - health_check_node:
          min_peers: 0
          external_port: 3013
          internal_port: 3113
          websocket_port: 3014
      - run:
          name: Health check Middleware
          command: |
            curl -sSf -o /dev/null --retry 6 http://localhost:4000/status || exit 2

  integration_tests_hyperchain:
    description: Integration Tests - Hyperchain
    steps:
      - health_check_node:
          min_peers: 0
          external_port: 23013
          internal_port: 23113
          websocket_port: 23014
      - run:
          name: Health check Middleware
          command: |
            curl -sSf -o /dev/null --retry 6 http://localhost:24000/status || exit 2

jobs:
  integration_tests:
    machine:
      image: ubuntu-2004:202201-02
    steps:
      - checkout
      - run_test_nodes
      - integration_tests

  integration_tests_multi:
    machine:
      image: ubuntu-2004:202201-02
    steps:
      - checkout
      - run_test_nodes:
          config: -f docker-compose.multi.yml
      - integration_tests_multi

  integration_tests_full:
    machine:
      image: ubuntu-2004:202201-02
    steps:
      - checkout
      - run_test_nodes:
          config: -f docker-compose.full.yml
          wait_time: 300
      - integration_tests_full

  integration_tests_hyperchain:
    machine:
      image: ubuntu-2004:202201-02
    steps:
      - checkout
      - run_test_nodes:
          config: -f docker-compose.full.yml -f docker-compose.hyperchain.yml
          wait_time: 480 #TODO lower down once we switch to MDW DH image
      - integration_tests_full
      - integration_tests_hyperchain

workflows:
  test:
    jobs:
      - integration_tests:
          requires: []
      - integration_tests_multi:
          requires: []
      - integration_tests_full:
          requires: []
      - integration_tests_hyperchain:
          requires: []
